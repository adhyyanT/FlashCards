// <auto-generated />
using System;
using FlashCards.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlashCards.Api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240817172506_RebuildDB")]
    partial class RebuildDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FlashCards.Api.Models.WordPack", b =>
                {
                    b.Property<int>("WordPackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("WordPackId");

                    b.HasIndex("AppUserId");

                    b.ToTable("WordPacks");
                });

            modelBuilder.Entity("FlashCards.Models.Models.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AppUserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("FlashCards.Models.Models.WordPackDetail", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Proficiency")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WordPackId")
                        .HasColumnType("int");

                    b.HasKey("WordId");

                    b.HasIndex("WordPackId");

                    b.ToTable("WordPackDetails");
                });

            modelBuilder.Entity("FlashCards.Api.Models.WordPack", b =>
                {
                    b.HasOne("FlashCards.Models.Models.AppUser", "AppUser")
                        .WithMany("WordPacks")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("FlashCards.Models.Models.WordPackDetail", b =>
                {
                    b.HasOne("FlashCards.Api.Models.WordPack", "WordPack")
                        .WithMany("WordPackDetails")
                        .HasForeignKey("WordPackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordPack");
                });

            modelBuilder.Entity("FlashCards.Api.Models.WordPack", b =>
                {
                    b.Navigation("WordPackDetails");
                });

            modelBuilder.Entity("FlashCards.Models.Models.AppUser", b =>
                {
                    b.Navigation("WordPacks");
                });
#pragma warning restore 612, 618
        }
    }
}
